{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { ethers } from 'ethers';\nlet AppComponent = class AppComponent {\n  // constructor function\n  constructor() {\n    this.provider = ethers.getDefaultProvider('goerli');\n  }\n  syncBlock() {\n    // here we are listenting to the promise and when it is completed then receiving the block object\n    this.blockNumber = \"loading...\";\n    this.provider.getBlock('latest').then(block => {\n      this.blockNumber = block.number;\n    });\n  }\n  clearBlock() {\n    this.blockNumber = 0;\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,MAAM,QAAQ,QAAQ;AAOxB,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAIvB;EACAC;IACE,IAAI,CAACC,QAAQ,GAAGH,MAAM,CAACI,kBAAkB,CAAC,QAAQ,CAAC;EACrD;EAEAC,SAAS;IACP;IACA,IAAI,CAACC,WAAW,GAAG,YAAY;IAC/B,IAAI,CAACH,QAAQ,CAACI,QAAQ,CAAC,QAAQ,CAAC,CAACC,IAAI,CAAEC,KAAK,IAAI;MAC9C,IAAI,CAACH,WAAW,GAAGG,KAAK,CAACC,MAAM;IACjC,CAAC,CAAC;EACJ;EAEAC,UAAU;IACR,IAAI,CAACL,WAAW,GAAG,CAAC;EACtB;CACD;AApBYL,YAAY,eALxBF,SAAS,CAAC;EACTa,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWb,YAAY,CAoBxB;SApBYA,YAAY","names":["Component","ethers","AppComponent","constructor","provider","getDefaultProvider","syncBlock","blockNumber","getBlock","then","block","number","clearBlock","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/algobloom/Documents/Workspace/Lesson-16/frontend/src/app/app.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ethers } from 'ethers';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  // number that starts at 0\n  blockNumber: number | string | undefined;\n  provider: ethers.providers.BaseProvider;\n  // constructor function\n  constructor() {\n    this.provider = ethers.getDefaultProvider('goerli');\n  }\n\n  syncBlock() {\n    // here we are listenting to the promise and when it is completed then receiving the block object\n    this.blockNumber = \"loading...\";\n    this.provider.getBlock('latest').then((block) => {\n      this.blockNumber = block.number;\n    });\n  }\n\n  clearBlock() {\n    this.blockNumber = 0;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}